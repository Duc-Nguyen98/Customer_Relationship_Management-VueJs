import mock from '@/@fake-db/mock'
// import { paginateArray, sortCompare } from '@/@fake-db/utils'

/* eslint-disable global-require */
const data = {
  tasks: [
    {
      id: 1,
      title: 'X√¢y d·ª±ng ch∆∞∆°ng tr√¨nh CRM cho CVV v√† ANT',
      dueDate: '2020-11-25',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Jacob Ramirez',
        avatar: require('@/assets/images/avatars/12.png'),
      },
      tags: ['update'],
      isCompleted: false,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 2,
      title: 'C√¥ng d√¢n ƒë·ª©ng h√†nh ch√≠nh b∆∞·ªõc c∆° quan th·∫ø k·ª∑.',
      dueDate: '2020-12-14',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Andrew Anderson',
        avatar: '',
      },
      tags: ['team', 'medium'],
      isCompleted: true,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 3,
      title: 'G·∫∑p Jane v√† m·ªùi c√† ph√™ ‚ù§Ô∏è',
      dueDate: '2020-11-25',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Benjamin Jacobs',
        avatar: '',
      },
      tags: ['high'],
      isCompleted: false,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 4,
      title: 'Tr·∫£ l·ªùi c√°c v√© h·ªó tr·ª£ v√† ƒë√≥ng c√°c v√© ƒë√£ ho√†n th√†nh. ',
      dueDate: '2020-11-20',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Curtis Schmidt',
        avatar: require('@/assets/images/avatars/9.png'),
      },
      tags: ['medium'],
      isCompleted: false,
      isDeleted: false,
      isImportant: true,
    },
    {
      id: 5,
      title: 'Ki·ªÉm tra ch·ª©c nƒÉng c·ªßa c√°c ·ª©ng d·ª•ng do nh√≥m nh√† ph√°t tri·ªÉn ph√°t tri·ªÉn ƒë·ªÉ c√≥ c√°c c·∫£i ti·∫øn. ',
      dueDate: '2020-12-06',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Katherine Perkins',
        avatar: require('@/assets/images/avatars/9.png'),
      },
      tags: ['medium'],
      isCompleted: true,
      isDeleted: false,
      isImportant: true,
    },
    {
      id: 6,
      title: 'Conduct a mini awareness meeting regarding health care. ',
      dueDate: '2020-12-06',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'David Murphy',
        avatar: '',
      },
      tags: ['high', 'medium'],
      isCompleted: true,
      isDeleted: true,
      isImportant: false,
    },
    {
      id: 7,
      title: 'L√™n k·∫ø ho·∫°ch thi·∫øt k·∫ø trang t·ªïng quan m·ªõi v·ªõi nh√≥m thi·∫øt k·∫ø cho c·ª≠a h√†ng ·ª©ng d·ª•ng c·ªßa Google. ',
      dueDate: '2020-12-05',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Karina Miller',
        avatar: require('@/assets/images/avatars/1.png'),
      },
      tags: ['medium'],
      isCompleted: false,
      isDeleted: false,
      isImportant: true,
    },
    {
      id: 8,
      title: 'ƒê√≥n Nats t·ª´ tr∆∞·ªùng c·ªßa c√¥ ·∫•y v√† ƒë·∫øn l·ªõp h·ªçc khi√™u v≈©üòÅ ',
      dueDate: '2020-12-08',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Thomas Moses',
        avatar: require('@/assets/images/avatars/7.png'),
      },
      tags: ['low', 'medium'],
      isCompleted: false,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 9,
      title: 'Finish documentation and make it live',
      dueDate: '2020-11-25',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Angel Morrow',
        avatar: '',
      },
      tags: ['high', 'update'],
      isCompleted: false,
      isDeleted: true,
      isImportant: false,
    },
    {
      id: 10,
      title: 'Li·ªát k√™ t·∫•t c·∫£ c√°c t√†i nguy√™n SEO v√† g·ª≠i n√≥ cho nh√≥m SEO m·ªõi. ',
      dueDate: '2020-12-09',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Karen Carrillo',
        avatar: '',
      },
      tags: ['low'],
      isCompleted: true,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 11,
      title: 'Refactor Code v√† s·ª≠a l·ªói v√† ki·ªÉm tra n√≥ tr√™n m√°y ch·ªß',
      dueDate: '2020-12-01',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Timothy Brewer',
        avatar: require('@/assets/images/avatars/1.png'),
      },
      tags: ['low'],
      isCompleted: true,
      isDeleted: false,
      isImportant: true,
    },
    {
      id: 12,
      title: 'Nh·∫Øc nh·ªü kh√°ch h√†ng qua th∆∞ cho ng√†y l·ªÖ',
      dueDate: '2020-12-09',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Brian Barry',
        avatar: '',
      },
      tags: ['team'],
      isCompleted: false,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 13,
      title: "G·ª≠i b√°o gi√° cho trang web th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ c·ªßa Abid v√† d·ª± √°n qu·∫£n tr·ªã",
      dueDate: '2020-12-01',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Joshua Golden',
        avatar: require('@/assets/images/avatars/5.png'),
      },
      tags: ['team'],
      isCompleted: false,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 14,
      title: 'G·ª≠i PPT v·ªõi b√°o c√°o th·ªùi gian th·ª±c',
      dueDate: '2020-11-29',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Paula Hammond',
        avatar: require('@/assets/images/avatars/5.png'),
      },
      tags: ['medium'],
      isCompleted: true,
      isDeleted: false,
      isImportant: true,
    },
    {
      id: 15,
      title: 'Skype Tommy ƒë·ªÉ bi·∫øt t√¨nh tr·∫°ng d·ª± √°n v√† b√°o c√°o',
      dueDate: '2020-11-29',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Tyler Garcia',
        avatar: '',
      },
      tags: ['medium'],
      isCompleted: false,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 16,
      title: 'Thu√™ 5 nh√† ph√°t tri·ªÉn m·ªõi ho·∫∑c c√≥ kinh nghi·ªám, giao di·ªán ng∆∞·ªùi d√πng v√† ph·ª• tr·ª£ m·ªõi',
      dueDate: '2020-12-12',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Darlene Shields',
        avatar: require('@/assets/images/avatars/1.png'),
      },
      tags: ['low'],
      isCompleted: true,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 17,
      title: 'L·∫≠p k·∫ø ho·∫°ch t·ªï ch·ª©c ti·ªác cho nh√≥m ph√°t tri·ªÉn üéÅ',
      dueDate: '2020-12-04',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Destiny Michael',
        avatar: '',
      },
      tags: ['medium', 'low'],
      isCompleted: false,
      isDeleted: false,
      isImportant: false,
    },
    {
      id: 18,
      title: 'S·ª≠a kh·∫£ nƒÉng ƒë√°p ·ª©ng cho c·∫•u tr√∫c m·ªõi üíª',
      dueDate: '2020-11-18',
      description:
        '<p>N·ªôi dung demo c·ªßa ph·∫ßn CRM Todo : ANT -CVV</p>',
      assignee: {
        fullName: 'Danielle Anderson',
        avatar: require('@/assets/images/avatars/12.png'),
      },
      tags: ['low'],
      isCompleted: false,
      isDeleted: false,
      isImportant: true,
    },
  ],
}
/* eslint-enable */

// ------------------------------------------------
// GET: Return Tasks
// ------------------------------------------------
mock.onGet('/apps/todo/tasks').reply(config => {
  // eslint-disable-next-line object-curly-newline
  const { q = '', filter, tag, sortBy: sortByParam = 'latest' } = config.params
  /* eslint-enable */

  // ------------------------------------------------
  // Get Sort by and Sort Direction
  // ------------------------------------------------
  let sortDesc = true

  const sortBy = (() => {
    if (sortByParam === 'title-asc') {
      sortDesc = false
      return 'title'
    }
    if (sortByParam === 'title-desc') return 'title'
    if (sortByParam === 'assignee') {
      sortDesc = false
      return 'assignee'
    }
    if (sortByParam === 'due-date') {
      sortDesc = false
      return 'dueDate'
    }
    return 'id'
  })()

  // ------------------------------------------------
  // Filtering
  // ------------------------------------------------
  const queryLowered = q.toLowerCase()

  const hasFilter = task => {
    if (filter === 'important') return task.isImportant && !task.isDeleted
    if (filter === 'completed') return task.isCompleted && !task.isDeleted
    if (filter === 'deleted') return task.isDeleted
    return !task.isDeleted
  }
  /* eslint-disable no-confusing-arrow, implicit-arrow-linebreak, arrow-body-style */
  const filteredData = data.tasks.filter(task => {
    return task.title.toLowerCase().includes(queryLowered) && hasFilter(task) && (tag ? task.tags.includes(tag) : true)
  })
  /* eslint-enable  */

  // ------------------------------------------------
  // Perform sorting
  // ------------------------------------------------
  const sortTasks = key => (a, b) => {
    let fieldA
    let fieldB

    // If sorting is by dueDate => Convert data to date
    if (key === 'dueDate') {
      fieldA = new Date(a[key])
      fieldB = new Date(b[key])
      // eslint-disable-next-line brace-style
    }

    // If sorting is by assignee => Use `fullName` of assignee
    else if (key === 'assignee') {
      fieldA = a.assignee ? a.assignee.fullName : null
      fieldB = b.assignee ? b.assignee.fullName : null
    } else {
      fieldA = a[key]
      fieldB = b[key]
    }

    let comparison = 0

    if (fieldA === fieldB) {
      comparison = 0
    } else if (fieldA === null) {
      comparison = 1
    } else if (fieldB === null) {
      comparison = -1
    } else if (fieldA > fieldB) {
      comparison = 1
    } else if (fieldA < fieldB) {
      comparison = -1
    }

    return comparison
  }

  // Sort Data
  const sortedData = filteredData.sort(sortTasks(sortBy))
  if (sortDesc) sortedData.reverse()

  return [200, sortedData]
})

// ------------------------------------------------
// POST: Add new task
// ------------------------------------------------
mock.onPost('/apps/todo/tasks').reply(config => {
  // Get event from post data
  const { task } = JSON.parse(config.data)

  const { length } = data.tasks
  let lastIndex = 0
  if (length) {
    lastIndex = data.tasks[length - 1].id
  }
  task.id = lastIndex + 1

  data.tasks.push(task)

  return [201, { task }]
})

// ------------------------------------------------
// POST: Update Task
// ------------------------------------------------
mock.onPost(/\/apps\/todo\/tasks\/\d+/).reply(config => {
  const { task: taskData } = JSON.parse(config.data)

  // Convert Id to number
  taskData.id = Number(taskData.id)

  const task = data.tasks.find(e => e.id === Number(taskData.id))
  Object.assign(task, taskData)

  return [200, { task }]
})

// ------------------------------------------------
// DELETE: Remove Task
// ------------------------------------------------
mock.onDelete(/\/apps\/todo\/tasks\/\d+/).reply(config => {
  // Get task id from URL
  let taskId = config.url.substring(config.url.lastIndexOf('/') + 1)

  // Convert Id to number
  taskId = Number(taskId)

  const task = data.tasks.find(t => t.id === taskId)
  Object.assign(task, { isDeleted: true })
  return [200]
})
